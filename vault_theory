What is vault?
 - manage secrets and protect sensitive data
 - provides a single source of secrets for both humans and machines
 - provides complete lifecycle management for secrets which eliminates secret sprawl, securely stores secrets, provides governance for access to secrets
What is a secret?
 - anything your organization deems sensitive such as usernames/passwords, certificates, api keys, certificates, encryption keys
Deploying the consul storage backend
 - consul is deployed using multiple nodes and configured as a cluster
 - clusters are deployed in odd numbers (for voting members)
 - all data is replicated among all nodes in the cluster
 - a leader electrion promotes a single consul node as the leader
 - the leader accepts new logs entries and replicates to all other nodes
 - consult cluster for vault storage backend should'nt be used for consul functions in a production setting
Deploying the integrated storage backend
 - integrated storage (aka Raft) allows vault nods to provide its own replicated storage across the vault nodes within a cluster
 - define a local path to store replicated date
 - all data is replicated among all nodes in the cluster
 - eliminates the need to also run a consul cluster and manage it
Storage backends
 - configures location for storage of vault data
 - storage is defined in the main vault configuration file with desired parameters
 - all data is encrypted in transit TLS and at rest using aes256
 - not all storage backends are created equal (some support high availability and others have better tools for management & data protection)
 - there is only one storage backend per vault cluster
Secrets engines
 - vault components that are responsible for managing secrets for your organization
 - secrets engines can store, generate and encrypt data
 - many secrets engines connect to other services to generate dynamic credentials on-demand
 - many secrets engines can be enabled and used as needed (even multiple secrets engines of the same type)
 - secret engines are enabled and isolated at a path (all interactions are done directly with the path itself)
